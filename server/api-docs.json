{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Carriage API",
    "description": "API Documentation for the Carriage ride sharing platform, which includes endpoints for Drivers, Riders, Admins, Rides, Subscriptions, and Stats."
  },
  "host": "localhost:3001/",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth": {
      "post": {
        "summary": "Authenticate user and generate JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "clientId": {
                    "type": "string"
                  },
                  "table": {
                    "type": "string",
                    "enum": [
                      "Riders",
                      "Drivers",
                      "Dispatchers"
                    ]
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "token",
                  "clientId",
                  "table",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "jwt"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/riders/{id}": {
      "get": {
        "summary": "Get a specific rider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested rider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rider"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific rider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated rider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rider"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific rider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the deleted rider",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "/": {
    "get": {
      "summary": "Get all drivers",
      "tags": [
        "Admin"
      ],
      "responses": {
        "200": {
          "description": "Returns a list of all drivers",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Driver"
            }
          }
        },
        "500": {
          "description": "Internal server error"
        }
      }
    },
    "post": {
      "summary": "Create a new driver",
      "tags": [
        "Admin"
      ],
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "description": "Driver object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Driver"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Driver created",
          "schema": {
            "$ref": "#/definitions/Driver"
          }
        },
        "400": {
          "description": "Bad request"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "/available": {
    "get": {
      "summary": "Get all available drivers at a specific date and time",
      "tags": [
        "User"
      ],
      "parameters": [
        {
          "name": "date",
          "in": "query",
          "description": "The date in format 'YYYY-MM-DD'",
          "required": true,
          "type": "string"
        },
        {
          "name": "startTime",
          "in": "query",
          "description": "The start time in format 'HH:mm'",
          "required": true,
          "type": "string"
        },
        {
          "name": "endTime",
          "in": "query",
          "description": "The end time in format 'HH:mm'",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Returns a list of all available drivers",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Driver"
            }
          }
        },
        "400": {
          "description": "Bad request"
        },
        "500": {
          "description": "Internal server error"
        }
      }
    }
  },
  "/{id}": {
    "get": {
      "summary": "Get a driver by ID",
      "tags": [
        "User"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Driver ID",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Returns a driver",
          "schema": {
            "$ref": "#/definitions/Driver"
          }
        }
      }
    }
  }
}